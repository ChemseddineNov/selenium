from playwright.sync_api import sync_playwright

# ================== HELPERS G√âN√âRIQUES ==================

def select_dropdown(page, label, value):
    # input Vuetify avec placeholder (√©vite les inputs "masqu√©s")
    input_box = page.locator(f"label:has-text('{label}') + div input[placeholder]").first
    input_box.click()
    page.wait_for_selector("div.v-overlay-container .v-list-item-title", state="visible")
    page.locator("div.v-overlay-container .v-list-item-title", has_text=value).first.click()
    print(f"‚úÖ {label} s√©lectionn√© : {value}")

def fill_input(page, label, value):
    page.wait_for_selector(f"label:has-text('{label}')")
    input_box = page.locator(f"label:has-text('{label}')").locator("xpath=..").locator("input")
    input_box.fill(str(value))
    print(f"‚úÖ {label} rempli : {value}")

def safe_fill_input(el, value: str):
    try: el.scroll_into_view_if_needed()
    except Exception: pass
    try:
        el.fill(value); el.page.wait_for_timeout(100); return
    except Exception: pass
    try:
        el.click(); el.page.keyboard.press("Control+A"); el.type(value, delay=15)
    except Exception: pass
    el.page.wait_for_timeout(100)

def get_active_panel(page):
    pnl = page.locator('[role="tabpanel"]:visible, .v-window-item--active').first
    return pnl if pnl.count() else None

def _scope(panel_or_none, page, selector: str):
    if panel_or_none:
        nodes = panel_or_none.locator(selector)
        if nodes.count(): return nodes
    return page.locator(selector)

def save_current_section(page, panel=None, label="section"):
    # Ferme tout menu/overlay √©ventuel
    for _ in range(2):
        try: page.keyboard.press("Escape")
        except Exception: pass
        page.wait_for_timeout(120)
    for attempt in range(2):
        try:
            btns = _scope(panel, page, "button:has-text('Enregistrer')")
            btn = btns.filter(has_not=page.locator('[aria-hidden="true"]')).last
            if not btn.count(): btn = page.locator("button:has-text('Enregistrer')").last
            btn.scroll_into_view_if_needed(); btn.click(force=True)
            page.wait_for_load_state("networkidle"); page.wait_for_timeout(350)
            print(f"üíæ Enregistr√© ({label}) [tentative {attempt+1}]"); return True
        except Exception:
            page.wait_for_timeout(300)
    print(f"‚ö†Ô∏è Impossible d'enregistrer ({label}), on poursuit."); return False

# ================== CAT√âGORIES DE DONN√âES ==================

def ajouter_categorie_donnees(page, donnee):
    """
    donnee = {
      "categorie_label": "... (libell√© EXACT DP-Manager)",
      "type": "Donn√©es perssonelles" | "Donn√©es professionnelles" | "Donn√©es financi√®res" | "Donn√©es sensibles",
      "origine": "Personne concern√©es",
      "utilise": "Oui",
      "source": "Formulaires en ligne" | "Syst√®me d'information" | "Dossiers papiers" | "Justificatifs fournis",
      "duree_type": "Limit√©e",
      "duree": 24/36/120,
      "declencheur": "Fin de la session" | "Cl√¥ture de l‚Äôexercice comptable" | ...
    }
    """
    print(f"‚û°Ô∏è Ajout (Cat√©gorie de donn√©es) : {donnee['categorie_label']}")
    page.get_by_role("button", name="Ajouter").first.click()
    page.wait_for_timeout(500)

    # Cat√©gorie des donn√©es (s√©lection par libell√© EXACT)
    page.locator("label:has-text('Cat√©gorie des donn√©es') + div input").click()
    page.wait_for_selector("div.v-overlay-container .v-list-item-title", state="visible")
    page.locator("div.v-overlay-container .v-list-item-title", has_text=donnee["categorie_label"]).first.click()
    print(f"‚úÖ Cat√©gorie s√©lectionn√©e : {donnee['categorie_label']}")

    # Type / Origine / Utilis√© / Source
    select_dropdown(page, "Type des donn√©es", donnee["type"])
    select_dropdown(page, "Origine de la donn√©e", donnee["origine"])
    select_dropdown(page, "Utilis√©(s) pour la finalit√© du traitement", donnee["utilise"])
    select_dropdown(page, "Source de donn√©es", donnee["source"])

    # Dur√©e / D√©clencheur
    if donnee["duree_type"] != "Limit√©e":
        select_dropdown(page, "Dur√©e de conservation", donnee["duree_type"])
    else:
        print("‚ÑπÔ∏è Dur√©e de conservation par d√©faut = Limit√©e")
    fill_input(page, "Pr√©ciser la dur√©e (mois)", donnee["duree"])
    fill_input(page, "√âl√©ment d√©clencheur", donnee["declencheur"])

    save_current_section(page, label=f"Cat√©gorie: {donnee['categorie_label']}")
    print("‚úÖ Cat√©gorie de donn√©es ajout√©e")

# ================== FINALIT√â ==================

def remplir_finalite(page, finalite_fr, finalite_ar):
    print("‚û°Ô∏è Remplissage de la section Finalit√©")
    menu_item = page.get_by_text("Finalit√©", exact=True)
    menu_item.scroll_into_view_if_needed(); menu_item.click(force=True)
    page.wait_for_timeout(600)

    textarea_fr = page.locator("label:has-text('Finalit√© (but) du traitement')").locator("xpath=..").locator("textarea")
    textarea_fr.fill(finalite_fr); print("‚úÖ Finalit√© FR remplie")

    textarea_ar = page.locator("label:has-text('ÿßŸÑÿ∫ÿßŸäÿ© (ÿßŸÑŸáÿØŸÅ) ŸÖŸÜ ÿßŸÑŸÖÿπÿßŸÑÿ¨ÿ©')").locator("xpath=..").locator("textarea")
    textarea_ar.fill(finalite_ar); print("‚úÖ Finalit√© AR remplie")

    save_current_section(page, label="Finalit√©")
    print("‚úÖ Section Finalit√© enregistr√©e")

# ================== SOUS-TRAITEMENTS ==================

def ajouter_sous_traitement(page, st):
    print(f"‚û°Ô∏è Ajout (Sous-traitement) : {st['denomination_fr']} / {st['denomination_ar']}")
    page.get_by_role("button", name="Ajouter").first.click()
    page.wait_for_timeout(500)

    modal = page.locator("div.v-overlay-container").last
    denom_fr = modal.locator("input").nth(0); denom_fr.wait_for(state="visible", timeout=5000); denom_fr.fill(st["denomination_fr"])
    denom_ar = modal.locator("input").nth(1); denom_ar.wait_for(state="visible", timeout=5000); denom_ar.fill(st["denomination_ar"])
    print("‚úÖ D√©nominations FR/AR remplies")

    type_input = modal.locator("label:has-text('Type de traitement') + div input").first
    type_input.click(); page.wait_for_selector("div.v-overlay-container .v-list-item-title", state="visible")
    for t in st["types"]:
        page.locator("div.v-overlay-container .v-list-item-title", has_text=t).first.click()
        print(f"‚úÖ Type s√©lectionn√© : {t}")
    page.keyboard.press("Escape")

    select_dropdown(page, "Base l√©gale", st["base_legale"])
    if st.get("sous_traitant"): select_dropdown(page, "Sous traitant", st["sous_traitant"])
    if st.get("logiciel"): select_dropdown(page, "Logiciel utilis√©", st["logiciel"])

    modal.locator("textarea").last.fill(st["note"])
    modal.locator("button:has-text('Enregistrer')").last.click()
    page.wait_for_timeout(700)
    print("‚úÖ Sous-traitement ajout√©")

# ================== CONSERVATION DES DONN√âES ==================

def ajouter_conservation_donnees(page, conservation):
    print("‚û°Ô∏è Ajout (Conservation des donn√©es)")
    onglet = page.get_by_text("Conservation des donn√©es", exact=True)
    onglet.scroll_into_view_if_needed(); onglet.click(force=True)
    page.wait_for_load_state("networkidle"); page.wait_for_timeout(300)

    def fill_by_label(label_text: str, value: str):
        lab = page.locator(f"label:has-text('{label_text}')").first
        lab.wait_for(state="visible", timeout=8000)
        inp = lab.locator("xpath=..").locator("input, textarea").first
        inp.wait_for(state="visible", timeout=8000)
        inp.fill(value)

    def ensure_checked(name_substring: str):
        cb = page.get_by_role("checkbox", name=name_substring, exact=False).first
        cb.wait_for(state="visible", timeout=8000)
        try:
            if not cb.is_checked(): cb.check(force=True)
        except Exception: cb.click(force=True)

    if "Manuel" in conservation["modes"]: ensure_checked("Manuel"); print("‚òëÔ∏è Manuel coch√©")
    if "Informatique" in conservation["modes"]: ensure_checked("Informatique"); print("‚òëÔ∏è Informatique coch√©")

    if "informatique" in conservation:
        fill_by_label("Nom de la base de donn√©es", conservation["informatique"]["nom"])
        fill_by_label("Lieu de stockage de la base de donn√©es", conservation["informatique"]["lieu"])
        print("‚úÖ Conservation informatique remplie")

    if "manuel" in conservation:
        fill_by_label("Nom du fichier manuel", conservation["manuel"]["nom"])
        fill_by_label("Lieu de stockage du fichier", conservation["manuel"]["lieu"])
        print("‚úÖ Conservation manuelle remplie")

    save_current_section(page, label="Conservation des donn√©es")

# ================== DESTINATAIRES ==================

def modal_select_dropdown(modal, label, value):
    input_box = modal.locator(f"label:has-text('{label}') + div input[placeholder]").first
    input_box.click()
    modal.page.wait_for_selector("div.v-overlay-container .v-list-item-title", state="visible")
    modal.page.locator("div.v-overlay-container .v-list-item-title", has_text=value).first.click()
    print(f"‚úÖ {label} s√©lectionn√© : {value}")

def modal_fill(modal, label, value):
    field = modal.locator(f"label:has-text('{label}')").locator("xpath=..").locator("textarea, input").first
    field.fill(str(value))

def ajouter_un_destinataire(page, d):
    page.get_by_role("button", name="Ajouter").first.click()
    page.wait_for_timeout(300)
    modal = page.locator("div.v-overlay-container").last

    dest_input = modal.locator("label:has-text('Destinataire') + div input").first
    dest_input.click()
    if d.get("destinataire"):
        dest_input.fill(d["destinataire"]); modal.page.wait_for_timeout(200)
    modal.page.wait_for_selector("div.v-overlay-container .v-list-item-title", state="visible")
    modal.page.locator("div.v-overlay-container .v-list-item-title", has_text=d["destinataire"]).first.click()
    print(f"‚úÖ Destinataire s√©lectionn√© : {d['destinataire']}")

    if d.get("moyen"): modal_select_dropdown(modal, "Moyen de communication", d["moyen"])
    if d.get("cadre_legal") is not None: modal_select_dropdown(modal, "Cadre legal", "Oui" if d["cadre_legal"] else "Non")
    if d.get("objectifs"): modal_fill(modal, "Objectifs", d["objectifs"])
    if d.get("observation"): modal_fill(modal, "Observation", d["observation"])

    modal.locator("button:has-text('Enregistrer')").last.click()
    page.wait_for_timeout(600)
    print("üíæ Destinataire ajout√©")

def ajouter_destinataires(page, items):
    print("‚û°Ô∏è Section Destinataires : ajout")
    onglet = page.get_by_text("Les destinataires des donn√©es", exact=True)
    onglet.scroll_into_view_if_needed(); onglet.click(force=True)
    page.wait_for_timeout(500)
    for d in items: ajouter_un_destinataire(page, d)
    save_current_section(page, label="Destinataires")
    print("‚úÖ Destinataires enregistr√©s")

# ================== CONSENTEMENT ==================

def ajouter_consentement(page, consent):
    print("‚û°Ô∏è Ajout (Consentement)")
    onglet = page.get_by_text("Consentement", exact=True)
    onglet.scroll_into_view_if_needed(); onglet.click(force=True)
    page.wait_for_timeout(500)

    select_dropdown(page, "Consentement des personnes concern√©es : Existe ?", "Oui" if consent.get("existe", True) else "Non")

    ta_fr = page.locator("label:has-text('Indiquer la m√©thode de consentement')").locator("xpath=..").locator("textarea").first
    if not ta_fr.count(): ta_fr = page.locator("textarea").first
    ta_fr.fill(consent.get("methode_fr", ""))

    ta_ar = page.locator("label:has-text('ÿ≠ÿØÿØ ŸÉŸäŸÅŸäÿ© ÿ£ÿÆÿ∞ ÿßŸÑŸÖŸàÿßŸÅŸÇÿ© ÿßŸÑÿµÿ±Ÿäÿ≠ÿ©')").locator("xpath=..").locator("textarea").first
    if not ta_ar.count() and page.locator("textarea").count() > 1:
        ta_ar = page.locator("textarea").nth(1)
    if ta_ar: ta_ar.fill(consent.get("methode_ar", ""))

    save_current_section(page, label="Consentement")
    print("‚úÖ Consentement enregistr√©")

# ================== DROITS DES PERSONNES ==================

def fill_pair_ids(page, panel, fr_id: str, fr_val: str, ar_id: str | None, ar_val: str | None):
    fr_val = fr_val or ""; ar_val = ar_val if ar_val is not None else fr_val
    fr_nodes = _scope(panel, page, f'textarea#{fr_id}, input#{fr_id}')
    if fr_nodes.count():
        for i in range(fr_nodes.count()): safe_fill_input(fr_nodes.nth(i), fr_val)
    if ar_id:
        ar_nodes = _scope(panel, page, f'textarea#{ar_id}, input#{ar_id}')
        if ar_nodes.count():
            for i in range(ar_nodes.count()): safe_fill_input(ar_nodes.nth(i), ar_val)

def fill_bilingual_same_id(page, panel, base_id: str, fr_val: str, ar_val: str | None):
    fr_val = fr_val or ""; ar_val = ar_val if ar_val is not None else fr_val
    nodes = _scope(panel, page, f'textarea#{base_id}, input#{base_id}')
    cnt = nodes.count()
    if cnt >= 2:
        safe_fill_input(nodes.nth(0), fr_val); safe_fill_input(nodes.nth(1), ar_val)
    elif cnt == 1:
        safe_fill_input(nodes.first, fr_val if fr_val else ar_val)

def click_onglet_vuetify(page, titre: str, expect_prefix: str | None = None):
    variants = list(dict.fromkeys([titre, titre.replace("'", "‚Äô"), titre.replace("‚Äô", "'")]))
    tablist = page.locator('[role="tablist"]').first
    if tablist.count():
        for _ in range(10):
            for cand in variants:
                tab = tablist.get_by_role("tab", name=cand, exact=False).first
                if tab.count():
                    tab.scroll_into_view_if_needed(); tab.click(force=True)
                    page.wait_for_timeout(250)
                    if expect_prefix:
                        active = get_active_panel(page) or page
                        sel = active.locator(f'[id^="{expect_prefix}_"]')
                        if sel.count(): return
                    return
            nxt = tablist.locator('.v-slide-group__next')
            if nxt.count() and nxt.is_enabled(): nxt.click(); page.wait_for_timeout(150)
            else: break
    for cand in variants:
        t = page.get_by_role("tab", name=cand, exact=False).first
        if t.count(): t.click(force=True); page.wait_for_timeout(250); return
    page.get_by_text(titre.replace("‚Äô", "'"), exact=False).first.click(); page.wait_for_timeout(250)

def remplir_droits_personnes(page, dp):
    print("‚û°Ô∏è Section Droits des personnes")
    menu = page.get_by_text("Droit des personnes", exact=False)
    menu.scroll_into_view_if_needed(); menu.click(force=True)
    page.wait_for_load_state("networkidle"); page.wait_for_timeout(300)

    # Information
    if dp.get("information"):
        click_onglet_vuetify(page, "Droit √† l'information", expect_prefix="information_right")
        panel = get_active_panel(page); info = dp["information"]; svc = info.get("service", {})
        fill_pair_ids(page, panel, "information_right_how", info.get("comment", ""), "information_right_how_ar", info.get("comment_ar"))
        fill_bilingual_same_id(page, panel, "information_right_mesures_prise", info.get("mesures", ""), info.get("mesures_ar"))
        fill_bilingual_same_id(page, panel, "information_right_service_name", svc.get("nom", ""), svc.get("nom_ar"))
        for fid, val in [("#information_right_phone", svc.get("mobile", "")), ("#information_right_email", svc.get("email","")),
                         ("#information_right_address", svc.get("adresse","")), ("#information_right_address_ar", svc.get("adresse_ar", svc.get("adresse","")))]:
            nodes = _scope(panel, page, fid)
            if nodes.count(): safe_fill_input(nodes.first, val)
        save_current_section(page, panel, label="Droit √† l'information")

    # Acc√®s / Rectification / Opposition
    def traiter_onglet(titre, pref, data):
        click_onglet_vuetify(page, titre, expect_prefix=pref)
        panel = get_active_panel(page); svc = data.get("service", {})
        fill_pair_ids(page, panel, f"{pref}_how", data.get("comment",""), f"{pref}_how_ar", data.get("comment_ar"))
        fill_bilingual_same_id(page, panel, f"{pref}_mesures_prise", data.get("mesures",""), data.get("mesures_ar"))
        fill_bilingual_same_id(page, panel, f"{pref}_service_name", svc.get("nom",""), svc.get("nom_ar"))
        for fid, val in [(f"#{pref}_phone", svc.get("mobile","")), (f"#{pref}_email", svc.get("email","")),
                         (f"#{pref}_address", svc.get("adresse","")), (f"#{pref}_address_ar", svc.get("adresse_ar", svc.get("adresse","")))]:
            nodes = _scope(panel, page, fid)
            if nodes.count(): safe_fill_input(nodes.first, val)
        save_current_section(page, panel, label=titre)

    if dp.get("acces"): traiter_onglet("Droit d'acc√®s", "access_right", dp["acces"])
    if dp.get("rectification"): traiter_onglet("Droit √† la rectification", "rectification_right", dp["rectification"])
    if dp.get("opposition"): traiter_onglet("Droit d'opposition", "opposition_right", dp["opposition"])
    print("‚úÖ Droits des personnes compl√©t√©s")

# ================== T√ÇCHES INITIALES ==================

def ajouter_taches_initiales(page, taches):
    print("‚û°Ô∏è T√¢ches initiales : ajout")
    menu = page.get_by_text("T√¢ches initiales", exact=False)
    menu.scroll_into_view_if_needed(); menu.click(force=True)
    page.wait_for_load_state("networkidle"); page.wait_for_timeout(300)

    for t in taches:
        page.get_by_role("button", name="Ajouter", exact=False).first.click()
        page.wait_for_timeout(300)
        modal = page.locator("div.v-overlay-container").last
        fields = modal.locator("input, textarea").filter(has_not=modal.locator('[aria-hidden="true"]'))
        fields.nth(0).fill(t.get("fr","")); fields.nth(1).fill(t.get("ar", t.get("fr","")))
        modal.locator("button:has-text('Enregistrer')").last.click()
        page.wait_for_timeout(400)

    save_current_section(page, label="T√¢ches initiales"); print("‚úÖ T√¢ches initiales enregistr√©es")

# ================== SCRIPT PRINCIPAL ==================

with sync_playwright() as p:
    browser = p.chromium.launch(headless=False)
    page = browser.new_page()

    # ===== Connexion =====
    page.goto("https://admin.dp-manager.com/login")
    page.fill("input[placeholder=\"Nom d'utilisateur\"]", "admin")  # <-- modifie si besoin
    page.fill("input[type='password']", "Chtitha@58206670")         # <-- modifie si besoin
    page.click("button:has-text(\"S'authentifier\")")
    page.wait_for_url("**/tenants", timeout=20000)
    print("‚úÖ Connexion r√©ussie (page tenants)")

    # ===== Cr√©ation traitement =====
    page.goto("https://admin.dp-manager.com/registers/trt-registers/create")
    page.wait_for_url("**/registers/trt-registers/create", timeout=20000)
    print("‚úÖ Page cr√©ation ouverte")

    page.fill("#code", "TRT-APP-SC")
    page.fill("#name", "Gestion des apprenants ‚Äì sessions courtes")
    page.fill("#name_ar", "ÿ™ÿ≥ŸäŸäÿ± ÿßŸÑŸÖÿ™ÿπŸÑŸëŸÖŸäŸÜ ‚Äì ÿßŸÑÿØŸàÿ±ÿßÿ™ ÿßŸÑŸÇÿµŸäÿ±ÿ©")

    # Statut + Types
    page.click("#status"); page.click("text=En cours")
    page.click("label:has-text(\"Type de traitement\") + div")
    page.locator("div.v-overlay-container div.v-list-item-title", has_text="Manuel").first.click()
    page.locator("div.v-overlay-container div.v-list-item-title", has_text="Automatique").first.click()
    page.click("body")

    page.wait_for_selector("button[type='submit']:not([disabled])", timeout=5000)
    page.locator("button[type='submit']").click()

    # ===== Fondement l√©gal =====
    page.click("text=Fondement l√©gal d'un traitement")
    page.fill("textarea", "Loi n¬∞ 08-07, Ordonnance n¬∞ 05-07, D√©cret ex√©cutif n¬∞ 04-90, D√©cret ex√©cutif n¬∞ 23-130, D√©cret n¬∞ 22-208")
    page.locator("textarea").nth(1).fill("ÿßŸÑŸÇÿßŸÜŸàŸÜ ÿ±ŸÇŸÖ 08-07ÿå ÿßŸÑÿ£ŸÖÿ± ÿ±ŸÇŸÖ 05-07ÿå ÿßŸÑŸÖÿ±ÿ≥ŸàŸÖ ÿßŸÑÿ™ŸÜŸÅŸäÿ∞Ÿä ÿ±ŸÇŸÖ 04-90ÿå ÿßŸÑŸÖÿ±ÿ≥ŸàŸÖ ÿßŸÑÿ™ŸÜŸÅŸäÿ∞Ÿä ÿ±ŸÇŸÖ 23-130ÿå ÿßŸÑŸÖÿ±ÿ≥ŸàŸÖ ÿ±ŸÇŸÖ 22-208")
    page.click("label:has-text('Le consentement expr√®s de la personne concern√©e')")
    page.click("label:has-text(\"L'ex√©cution d'un contrat ou pr√©contrat √† la demande de la personne\")")
    page.locator("textarea").nth(2).fill("Exemple : protection des int√©r√™ts l√©gitimes de l‚Äôorganisation")
    save_current_section(page, label="Fondement l√©gal")
    print("‚úÖ Section Fondement l√©gal enregistr√©e")

    # ===== Cat√©gories de personnes =====
    menu_item = page.locator("text=Cat√©gories de donn√©es √† caract√®re personnel")
    menu_item.scroll_into_view_if_needed(); menu_item.click(force=True)
    page.wait_for_timeout(800)

    CATEGORIE_PERSONNE = "Apprenants"     # <-- EXACT libell√© DP-Manager
    TYPE_COLLECTE = "Manuel et Automatique"
    MODE_COLLECTE = "Internet"           # <-- change par "Intranet" ou "Poste d√©connect√©" selon ta pratique

    page.get_by_role("button", name="Ajouter").click()
    page.wait_for_timeout(400)
    select_dropdown(page, "Cat√©gorie des personnes concern√©es", CATEGORIE_PERSONNE)
    select_dropdown(page, "Type de collecte de donn√©es", TYPE_COLLECTE)
    select_dropdown(page, "Mode de collecte", MODE_COLLECTE)

    # (S√©curit√©s optionnelles si pr√©sentes)
    for securite in ["Tra√ßabilit√©", "Signature √©lectronique", "Chiffrement", "Charte de s√©curit√©"]:
        try:
            checkbox = page.locator(f"label:has-text('{securite}')")
            if checkbox.is_visible(): checkbox.click(); print(f"‚òëÔ∏è {securite} coch√©e")
        except: pass

    save_current_section(page, label=f"Cat√©gorie {CATEGORIE_PERSONNE}")
    print("‚úÖ Cat√©gorie de personnes enregistr√©e")

    # ===== Cat√©gories de donn√©es =====
    onglet_donnees = page.get_by_text("Cat√©gorie des donn√©es collect√©es et trait√©es", exact=True)
    onglet_donnees.scroll_into_view_if_needed(); onglet_donnees.click(force=True)
    page.wait_for_timeout(800)

    categories_donnees = [
        # libell√© EXACT + type EXACT (colonne 2 de ta base)
        {"categorie_label":"Nom et Pr√©nom ..... ÿßŸÑŸÑŸÇÿ® ŸàÿßŸÑÿßÿ≥ŸÖ","type":"Donn√©es perssonelles","origine":"Personne concern√©es","utilise":"Oui","source":"Formulaires en ligne","duree_type":"Limit√©e","duree":36,"declencheur":"Fin de la session"},
        {"categorie_label":"Date de Naissance ..... ÿ™ÿßÿ±ŸäÿÆ ÿßŸÑŸÖŸäŸÑÿßÿØ","type":"Donn√©es perssonelles","origine":"Personne concern√©es","utilise":"Oui","source":"Formulaires en ligne","duree_type":"Limit√©e","duree":36,"declencheur":"Fin de la session"},
        {"categorie_label":"Adresse Mail ..... ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä","type":"Donn√©es perssonelles","origine":"Personne concern√©es","utilise":"Oui","source":"Formulaires en ligne","duree_type":"Limit√©e","duree":24,"declencheur":"Fin de la session"},
        {"categorie_label":"N¬∫ de t√©l√©phone ..... ÿ±ŸÇŸÖ ÿßŸÑŸáÿßÿ™ŸÅ","type":"Donn√©es perssonelles","origine":"Personne concern√©es","utilise":"Oui","source":"Formulaires en ligne","duree_type":"Limit√©e","duree":24,"declencheur":"Fin de la session"},
        {"categorie_label":"Donn√©es de pointage (pr√©sence) ..... ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ≠ÿ∂Ÿàÿ±","type":"Donn√©es professionnelles","origine":"Personne concern√©es","utilise":"Oui","source":"Syst√®me d'information","duree_type":"Limit√©e","duree":24,"declencheur":"Fin de la session"},
        {"categorie_label":"R√©sultats / √âvaluation de fin de session","type":"Donn√©es professionnelles","origine":"Personne concern√©es","utilise":"Oui","source":"Syst√®me d'information","duree_type":"Limit√©e","duree":24,"declencheur":"Fin de la session"},
        {"categorie_label":"Num√©ro d‚Äôattestation / D√©tails de d√©livrance","type":"Donn√©es professionnelles","origine":"Personne concern√©es","utilise":"Oui","source":"Syst√®me d'information","duree_type":"Limit√©e","duree":36,"declencheur":"Fin de la session"},
        {"categorie_label":"Employeur ..... ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ","type":"Donn√©es professionnelles","origine":"Personne concern√©es","utilise":"Oui","source":"Justificatifs fournis","duree_type":"Limit√©e","duree":24,"declencheur":"Fin de la session"},
        {"categorie_label":"Organisme financeur","type":"Donn√©es financi√®res","origine":"Personne concern√©es","utilise":"Oui","source":"Justificatifs fournis","duree_type":"Limit√©e","duree":24,"declencheur":"Fin de la session"},
        {"categorie_label":"Mode de paiement ..... Ÿàÿ≥ŸäŸÑÿ© ÿßŸÑÿØŸÅÿπ","type":"Donn√©es financi√®res","origine":"Personne concern√©es","utilise":"Oui","source":"Syst√®me d'information","duree_type":"Limit√©e","duree":120,"declencheur":"Cl√¥ture de l‚Äôexercice comptable"},
        {"categorie_label":"Ch√®que barr√© ..... ÿßŸÑÿµŸÉ ÿßŸÑŸÖÿ¥ÿ∑Ÿàÿ®","type":"Donn√©es financi√®res","origine":"Personne concern√©es","utilise":"Oui","source":"Dossiers papiers","duree_type":"Limit√©e","duree":120,"declencheur":"Cl√¥ture de l‚Äôexercice comptable"},
    ]
    for donnee in categories_donnees:
        ajouter_categorie_donnees(page, donnee)
    print("‚úÖ Toutes les cat√©gories de donn√©es ont √©t√© ajout√©es")

    # ===== Finalit√© =====
    remplir_finalite(
        page,
        "Gestion administrative et p√©dagogique des apprenants inscrits √† des sessions courtes : inscription, suivi de pr√©sence, √©valuation et d√©livrance d‚Äôattestations de participation.",
        "ÿßŸÑÿ™ÿ≥ŸäŸäÿ± ÿßŸÑÿ•ÿØÿßÿ±Ÿä ŸàÿßŸÑÿ®ŸäÿØÿßÿ∫Ÿàÿ¨Ÿä ŸÑŸÑŸÖÿ™ÿπŸÑŸÖŸäŸÜ ŸÅŸä ÿßŸÑÿØŸàÿ±ÿßÿ™ ÿßŸÑŸÇÿµŸäÿ±ÿ©: ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑÿå ŸÖÿ™ÿßÿ®ÿπÿ© ÿßŸÑÿ≠ÿ∂Ÿàÿ±ÿå ÿßŸÑÿ™ŸÇŸäŸäŸÖ Ÿàÿ•ÿµÿØÿßÿ± ÿ¥ŸáÿßÿØÿßÿ™ ÿßŸÑŸÖÿ¥ÿßÿ±ŸÉÿ©."
    )

    # ===== Sous-traitements (catalogue exhaustif ; supprime/commmente ce qui ne s'applique pas) =====
    onglet_sous_traitements = page.get_by_text("Sous-traitements", exact=True)
    onglet_sous_traitements.scroll_into_view_if_needed(); onglet_sous_traitements.click(force=True)
    page.wait_for_timeout(800)

    ST_BASE_CONTRAT = "L'ex√©cution d'un contrat ou pr√©contrat √† la demande de la personne"
    ST_BASE_OBLIG = "Le respect d'une obligation l√©gale."

    sous_traitements = [
        # 1) Collecte & inscription
        {"denomination_fr":"Remplissage de la fiche d‚Äôinformation","denomination_ar":"ÿ™ÿπÿ®ÿ¶ÿ© ÿßÿ≥ÿ™ŸÖÿßÿ±ÿ© ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™","types":["Manuel"],"base_legale":ST_BASE_CONTRAT,"note":"Saisie papier par personnel/assistant."},
        {"denomination_fr":"Formulaires d‚Äôinscription en ligne","denomination_ar":"ÿßÿ≥ÿ™ŸÖÿßÿ±ÿßÿ™ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ÿπÿ®ÿ± ÿßŸÑÿ•ŸÜÿ™ÿ±ŸÜÿ™","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Portail/LMS ou prestataire de formulaires."},
        {"denomination_fr":"Num√©risation & OCR des pi√®ces","denomination_ar":"ÿ±ŸÇŸÖŸÜÿ© Ÿàÿßÿ≥ÿ™ÿÆŸÑÿßÿµ ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑŸàÿ´ÿßÿ¶ŸÇ","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Scan d‚ÄôID/dipl√¥mes/justificatifs."},
        {"denomination_fr":"Signature √©lectronique (notice/consentement)","denomination_ar":"ÿßŸÑÿ™ŸàŸÇŸäÿπ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä (ÿßŸÑŸÖÿ∞ŸÉÿ±ÿ©/ÿßŸÑŸÖŸàÿßŸÅŸÇÿ©)","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Preuve de consentement."},
        {"denomination_fr":"V√©rification d‚Äôidentit√© (KYC all√©g√©)","denomination_ar":"ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑŸáŸàŸäÿ©","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Uniquement si n√©cessaire."},
        {"denomination_fr":"Prise de rendez-vous & agenda","denomination_ar":"ÿ≠ÿ¨ÿ≤ ÿßŸÑŸÖŸàÿßÿπŸäÿØ Ÿàÿ¨ÿØŸàŸÑÿ© ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Outil de booking."},

        # 2) Pr√©sence & organisation
        {"denomination_fr":"Remplissage de la feuille de pr√©sence","denomination_ar":"ÿ™ÿπÿ®ÿ¶ÿ© Ÿàÿ±ŸÇÿ© ÿßŸÑÿ≠ÿ∂Ÿàÿ±","types":["Manuel"],"base_legale":ST_BASE_CONTRAT,"note":"Par agent/assistant."},
        {"denomination_fr":"Saisie des pr√©sences dans le SI","denomination_ar":"ÿ•ÿØÿÆÿßŸÑ ÿßŸÑÿ≠ÿ∂Ÿàÿ± ŸÅŸä ÿßŸÑŸÜÿ∏ÿßŸÖ","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Back-office/ERP."},
        {"denomination_fr":"Contr√¥le de pr√©sence par QR/badge","denomination_ar":"ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑÿ≠ÿ∂Ÿàÿ± ÿπÿ®ÿ± QR/ÿ®ÿ∑ÿßŸÇÿ©","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Sans biom√©trie."},
        {"denomination_fr":"Planification des sessions & salles","denomination_ar":"ÿ™ÿÆÿ∑Ÿäÿ∑ ÿßŸÑÿ¨ŸÑÿ≥ÿßÿ™ ŸàÿßŸÑŸÇÿßÿπÿßÿ™","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Outil de planning."},
        {"denomination_fr":"Convocations & rappels par e-mail (transactionnel)","denomination_ar":"ÿßŸÑÿßÿ≥ÿ™ÿØÿπÿßÿ°ÿßÿ™ ŸàÿßŸÑÿ™ÿ∞ŸÉŸäÿ±ÿßÿ™ ÿ®ÿßŸÑÿ®ÿ±ŸäÿØ","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"ESP/SMTP."},
        {"denomination_fr":"Rappels SMS/WhatsApp","denomination_ar":"ÿ™ÿ∞ŸÉŸäÿ±ÿßÿ™ ÿπÿ®ÿ± ÿßŸÑÿ±ÿ≥ÿßÿ¶ŸÑ ÿßŸÑŸÇÿµŸäÿ±ÿ©/Ÿàÿßÿ™ÿ≥ÿßÿ®","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Prestataire SMS."},

        # 3) P√©dagogie, √©valuation, certification
        {"denomination_fr":"H√©bergement LMS & diffusion de contenus","denomination_ar":"ÿßÿ≥ÿ™ÿ∂ÿßŸÅÿ© ÿßŸÑŸÖŸÜÿµÿ© ÿßŸÑÿ™ÿπŸÑŸäŸÖŸäÿ© ŸàŸÜÿ¥ÿ± ÿßŸÑŸÖÿ≠ÿ™ŸàŸâ","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"LMS h√©berg√©."},
        {"denomination_fr":"Quizz & √©valuations en ligne","denomination_ar":"ÿßÿÆÿ™ÿ®ÿßÿ±ÿßÿ™ Ÿàÿ™ŸÇŸäŸäŸÖÿßÿ™ ÿπÿ®ÿ± ÿßŸÑÿ•ŸÜÿ™ÿ±ŸÜÿ™","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Moteur d‚Äô√©valuation."},
        {"denomination_fr":"Correction/notation assist√©e","denomination_ar":"ÿ™ÿµÿ≠Ÿäÿ≠ ÿ®ŸÖÿ≥ÿßÿπÿØÿ© ŸÜÿ∏ŸÖ","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Outils de correction."},
        {"denomination_fr":"G√©n√©ration des attestations","denomination_ar":"ÿ•ÿµÿØÿßÿ± ÿßŸÑÿ¥ŸáÿßÿØÿßÿ™","types":["Automatique","Manuel"],"base_legale":ST_BASE_CONTRAT,"note":"Num√©rotation/√©dition PDF."},
        {"denomination_fr":"Archivage √©valuations & attestations","denomination_ar":"ÿ£ÿ±ÿ¥ŸÅÿ© ÿßŸÑÿ™ŸÇŸäŸäŸÖÿßÿ™ ŸàÿßŸÑÿ¥ŸáÿßÿØÿßÿ™","types":["Automatique"],"base_legale":ST_BASE_OBLIG,"note":"Archivage/coffre-fort."},
        {"denomination_fr":"Visioconf√©rence & webinaires","denomination_ar":"ŸÖÿ§ÿ™ŸÖÿ±ÿßÿ™ ŸÖÿ±ÿ¶Ÿäÿ© ŸàŸÜÿØŸàÿßÿ™","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Zoom/Meet/Teams."},
        {"denomination_fr":"Transcription p√©dagogique","denomination_ar":"ŸÜÿ≥ÿÆ ÿßŸÑŸÖÿ≠ÿ™ŸàŸâ ÿßŸÑÿ™ÿπŸÑŸäŸÖŸä","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Accessibilit√© (minimiser)."},
        {"denomination_fr":"Traduction de supports","denomination_ar":"ÿ™ÿ±ÿ¨ŸÖÿ© ÿßŸÑŸÖÿ≠ÿ™ŸàŸäÿßÿ™","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Si n√©cessaire."},
        {"denomination_fr":"Anti-plagiat","denomination_ar":"ŸÖŸÉÿßŸÅÿ≠ÿ© ÿßŸÑÿßŸÜÿ™ÿ≠ÿßŸÑ","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Outil d‚Äôanalyse."},
        {"denomination_fr":"Proctoring d‚Äôexamen √† distance","denomination_ar":"ŸÖÿ±ÿßŸÇÿ®ÿ© ÿßŸÑÿßŸÖÿ™ÿ≠ÿßŸÜÿßÿ™ ÿπŸÜ ÿ®ÿπÿØ","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Intrusif : informer clairement."},

        # 4) Communication (hors transactionnel) ‚Äî souvent traitement s√©par√©
        {"denomination_fr":"E-mail marketing pour des formations","denomination_ar":"ÿßŸÑÿ™ÿ≥ŸàŸäŸÇ ÿ®ÿßŸÑÿ®ÿ±ŸäÿØ ŸÑÿØŸàÿ±ÿßÿ™","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Id√©alement dans un traitement Marketing s√©par√©."},
        {"denomination_fr":"Newsletter p√©dagogique","denomination_ar":"ÿßŸÑŸÜÿ¥ÿ±ÿ© ÿßŸÑÿ™ÿπŸÑŸäŸÖŸäÿ©","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Optionnel."},

        # 5) Paiement & administratif
        {"denomination_fr":"Paiement en ligne (inscription)","denomination_ar":"ÿßŸÑÿØŸÅÿπ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä ŸÑŸÑÿ™ÿ≥ÿ¨ŸäŸÑ","types":["Automatique"],"base_legale":ST_BASE_OBLIG,"note":"PSP ; pas de carte stock√©e localement."},
        {"denomination_fr":"Facturation & re√ßus","denomination_ar":"ÿßŸÑŸÅŸàÿ™ÿ±ÿ© ŸàÿßŸÑÿ•ŸäÿµÿßŸÑÿßÿ™","types":["Automatique"],"base_legale":ST_BASE_OBLIG,"note":"Outil comptable/ERP."},
        {"denomination_fr":"Remboursements & avoirs","denomination_ar":"ÿßŸÑÿßÿ≥ÿ™ÿ±ÿ¨ÿßÿπÿßÿ™ ŸàÿßŸÑÿ•ÿ¥ÿπÿßÿ±ÿßÿ™ ÿßŸÑÿØÿßÿ¶ŸÜÿ©","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"PSP/ERP."},
        {"denomination_fr":"Comptabilit√© externalis√©e","denomination_ar":"ÿßŸÑŸÖÿ≠ÿßÿ≥ÿ®ÿ© ŸÑÿØŸâ ŸÖÿ≤ŸàŸëÿØ ÿÆÿßÿ±ÿ¨Ÿä","types":["Automatique"],"base_legale":ST_BASE_OBLIG,"note":"Cabinet comptable."},

        # 6) Formateur (sous-traitant)
        {"denomination_fr":"Animation p√©dagogique ‚Äì Formateur externe","denomination_ar":"ÿßŸÑÿ™ŸÜÿ¥Ÿäÿ∑ ÿßŸÑÿ®ŸäÿØÿßÿ∫Ÿàÿ¨Ÿä ‚Äì ŸÖŸÉŸàŸëŸÜ ÿÆÿßÿ±ÿ¨Ÿä","types":["Manuel","Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Acc√®s limit√© : listes, pr√©sences."},
        {"denomination_fr":"√âvaluations & saisie des r√©sultats ‚Äì Formateur","denomination_ar":"ÿßŸÑÿ™ŸÇŸäŸäŸÖ Ÿàÿ•ÿØÿÆÿßŸÑ ÿßŸÑŸÜÿ™ÿßÿ¶ÿ¨ ‚Äì ÿßŸÑŸÖŸÉŸàŸëŸÜ","types":["Manuel","Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Saisie/validation r√©sultats."},
        {"denomination_fr":"√âmission d‚Äôattestations ‚Äì Formateur","denomination_ar":"ÿ•ÿµÿØÿßÿ± ÿßŸÑÿ¥ŸáÿßÿØÿßÿ™ ‚Äì ÿßŸÑŸÖŸÉŸàŸëŸÜ","types":["Automatique","Manuel"],"base_legale":ST_BASE_CONTRAT,"note":"Num√©rotation/√©dition PDF."},
        {"denomination_fr":"H√©bergement LMS/visioconf op√©r√© par le formateur","denomination_ar":"ÿßÿ≥ÿ™ÿ∂ÿßŸÅÿ© LMS/ŸÖŸÜÿµÿ© ŸÖÿ±ÿ¶Ÿäÿ© ŸäÿØŸäÿ±Ÿáÿß ÿßŸÑŸÖŸÉŸàŸëŸÜ","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Si l‚Äôacc√®s passe par son outil."},

        # 7) Partenaires priv√©s (trait√©s comme sous-traitants)
        {"denomination_fr":"Transmission √† l‚Äôemployeur (justificatifs)","denomination_ar":"ŸÖÿ¥ÿßÿ±ŸÉÿ© ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ŸÖÿπ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ","types":["Automatique","Manuel"],"base_legale":ST_BASE_CONTRAT,"note":"Pr√©sences/attestation minimales."},
        {"denomination_fr":"Transmission √† l‚Äôorganisme financeur","denomination_ar":"ŸÖÿ¥ÿßÿ±ŸÉÿ© ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ŸÖÿπ ÿßŸÑÿ¨Ÿáÿ© ÿßŸÑŸÖŸÖŸàŸÑÿ©","types":["Automatique","Manuel"],"base_legale":ST_BASE_CONTRAT,"note":"Justificatifs/factures."},

        # 8) Support & relation apprenant
        {"denomination_fr":"Helpdesk & tickets","denomination_ar":"ŸÖŸÉÿ™ÿ® ÿßŸÑŸÖÿ≥ÿßÿπÿØÿ© ŸàŸÜÿ∏ÿßŸÖ ÿßŸÑÿ™ÿ∞ÿßŸÉÿ±","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Suivi des demandes."},
        {"denomination_fr":"Chat de support","denomination_ar":"ÿØÿ±ÿØÿ¥ÿ© ÿßŸÑŸÖÿ≥ÿßŸÜÿØÿ©","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Widget chat."},
        {"denomination_fr":"Sondages de satisfaction","denomination_ar":"ÿßÿ≥ÿ™ÿ∑ŸÑÿßÿπÿßÿ™ ÿßŸÑÿ±ÿ∂ÿß","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Post-session."},

        # 9) Infrastructure & s√©curit√©
        {"denomination_fr":"H√©bergement cloud (appli & base)","denomination_ar":"ÿßŸÑÿßÿ≥ÿ™ÿ∂ÿßŸÅÿ© ÿßŸÑÿ≥ÿ≠ÿßÿ®Ÿäÿ© ŸÑŸÑÿ™ÿ∑ÿ®ŸäŸÇ ŸàÿßŸÑÿ®ŸäÿßŸÜÿßÿ™","types":["Automatique"],"base_legale":ST_BASE_OBLIG,"note":"IaaS/PaaS."},
        {"denomination_fr":"Sauvegarde & PRA externalis√©s","denomination_ar":"ÿßŸÑŸÜÿ≥ÿÆ ÿßŸÑÿßÿ≠ÿ™Ÿäÿßÿ∑Ÿä ŸàÿÆÿ∑ÿ© ÿßŸÑÿ™ÿπÿßŸÅŸä","types":["Automatique"],"base_legale":ST_BASE_OBLIG,"note":"Backups chiffr√©s."},
        {"denomination_fr":"WAF/CDN/Anti-DDoS","denomination_ar":"ÿ¨ÿØÿßÿ± ÿ™ÿ∑ÿ®ŸäŸÇÿßÿ™ ÿßŸÑŸàŸäÿ® Ÿàÿ¥ÿ®ŸÉÿßÿ™ ÿßŸÑÿ™Ÿàÿ≤Ÿäÿπ","types":["Automatique"],"base_legale":ST_BASE_OBLIG,"note":"Protection p√©rim√©trique."},
        {"denomination_fr":"CAPTCHA/anti-spam","denomination_ar":"ŸÉÿßÿ®ÿ™ÿ¥ÿß ŸàŸÖÿ∂ÿßÿØ ÿßŸÑÿ±ÿ≥ÿßÿ¶ŸÑ ÿßŸÑŸÖÿ≤ÿπÿ¨ÿ©","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Protection des formulaires."},
        {"denomination_fr":"Supervision & logs","denomination_ar":"ÿßŸÑŸÖÿ±ÿßŸÇÿ®ÿ© ŸàÿßŸÑÿ≥ÿ¨ŸÑÿßÿ™","types":["Automatique"],"base_legale":ST_BASE_OBLIG,"note":"Monitoring/centralisation."},
        {"denomination_fr":"Stockage documentaire (GED/Drive)","denomination_ar":"ÿ•ÿØÿßÿ±ÿ© ÿßŸÑŸàÿ´ÿßÿ¶ŸÇ ŸàÿßŸÑÿ™ÿÆÿ≤ŸäŸÜ","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Dossiers/attestations."},
        {"denomination_fr":"Routage e-mail (SMTP relay)","denomination_ar":"ÿ™Ÿàÿ¨ŸäŸá ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Fournisseur SMTP."},
        {"denomination_fr":"Chiffrement & gestion de cl√©s (KMS)","denomination_ar":"ÿßŸÑÿ™ÿ¥ŸÅŸäÿ± Ÿàÿ•ÿØÿßÿ±ÿ© ÿßŸÑŸÖŸÅÿßÿ™Ÿäÿ≠","types":["Automatique"],"base_legale":ST_BASE_OBLIG,"note":"KMS externe."},
        {"denomination_fr":"Antivirus/EDR g√©r√©","denomination_ar":"ŸÖÿ∂ÿßÿØ ŸÅŸäÿ±Ÿàÿ≥ÿßÿ™/ÿ≠ŸÖÿßŸäÿ© ŸÜŸÇÿßÿ∑ ÿßŸÑŸÜŸáÿßŸäÿ©","types":["Automatique"],"base_legale":ST_BASE_OBLIG,"note":"Op√©rateur EDR."},
        {"denomination_fr":"SSO/Identity Provider","denomination_ar":"ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ ÿßŸÑŸÖŸàÿ≠ÿØ","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Authentification unique."},
        {"denomination_fr":"Annuaire/AD/LDAP","denomination_ar":"ÿßŸÑÿØŸÑŸäŸÑ ÿßŸÑŸÖÿ§ÿ≥ÿ≥Ÿä","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Comptes & acc√®s."},

        # 10) Conformit√© & cycle de vie
        {"denomination_fr":"Gestion des demandes de droits (DSAR)","denomination_ar":"ÿ•ÿØÿßÿ±ÿ© ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ŸÇŸàŸÇ","types":["Automatique"],"base_legale":ST_BASE_OBLIG,"note":"Portail de requ√™tes."},
        {"denomination_fr":"Pseudonymisation/Anonymisation","denomination_ar":"ÿ•ÿÆŸÅÿßÿ° ÿßŸÑŸáŸàŸäÿ©/ÿ™ÿ¨ÿ±ŸäÿØŸáÿß","types":["Automatique"],"base_legale":ST_BASE_CONTRAT,"note":"Stats/tests."},
        {"denomination_fr":"Journalisation & tra√ßabilit√©","denomination_ar":"ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ŸàÿßŸÑÿ™ÿ™ÿ®ÿπ","types":["Automatique"],"base_legale":ST_BASE_OBLIG,"note":"Preuves d‚Äôacc√®s/actions."},
        {"denomination_fr":"Destruction/suppression certifi√©e","denomination_ar":"ÿ≠ÿ∞ŸÅ ŸÖŸèŸàÿ´ŸëŸÇ","types":["Automatique"],"base_legale":ST_BASE_OBLIG,"note":"Preuves d‚Äôeffacement."},
        {"denomination_fr":"Audit de s√©curit√© externe","denomination_ar":"ÿ™ÿØŸÇŸäŸÇ ÿ£ŸÖŸÜŸä ÿÆÿßÿ±ÿ¨Ÿä","types":["Automatique"],"base_legale":ST_BASE_OBLIG,"note":"Rapports d‚Äôaudit."},
    ]

    for st in sous_traitements:
        ajouter_sous_traitement(page, st)
    print("‚úÖ Tous les sous-traitements ont √©t√© ajout√©s")

    # ===== Conservation des donn√©es =====
    ajouter_conservation_donnees(page, {
        "modes":["Manuel","Informatique"],
        "informatique":{"nom":"Base Apprenants ‚Äì Sessions courtes","lieu":"Serveur p√©dagogique de l‚Äô√©tablissement (Alg√©rie)"},
        "manuel":{"nom":"Dossiers Apprenants ‚Äì Sessions courtes","lieu":"Archives scolarit√© (Alg√©rie)"}
    })

    # ===== Destinataires (uniquement institutions de l'√âtat de ta base) =====
    destinataires = [
        {"destinataire":"Direction de la formation professionnelle","moyen":"Connexion","cadre_legal":True,"objectifs":"Obligations/statistiques/homologation.","observation":"Transmission p√©riodique via portail."},
        {"destinataire":"Minist√®re de la formation professionnelle","moyen":"Connexion","cadre_legal":True,"objectifs":"Suivi tutelle au niveau central.","observation":"Selon obligation."},
        {"destinataire":"Minist√®re de l'enseignement sup√©rieur","moyen":"Connexion","cadre_legal":True,"objectifs":"Si l‚Äô√©tablissement rel√®ve du MESRS.","observation":"Selon obligation."},
        {"destinataire":"L'adminsitration fiscale (Imp√¥ts)","moyen":"Connexion","cadre_legal":True,"objectifs":"Pi√®ces comptables nominatives le cas √©ch√©ant.","observation":"Via comptabilit√©."},
        {"destinataire":"Autorit√©s judiciaires ou s√©curitaires sur r√©quisition l√©gale.","moyen":"Papier","cadre_legal":True,"objectifs":"R√©quisition l√©gale.","observation":"Transmission sur demande."},
        {"destinataire":"Les organismes et autorit√©s comp√©tents","moyen":"Papier","cadre_legal":True,"objectifs":"Obligations ponctuelles impos√©es par la tutelle.","observation":"Si applicable."}
    ]
    ajouter_destinataires(page, destinataires)

    # ===== Consentement =====
    ajouter_consentement(page, {
        "existe": True,
        "methode_fr": "Consentement explicite donn√© √† l‚Äôinscription : signature de la notice d‚Äôinformation (papier ou signature √©lectronique).",
        "methode_ar": "ÿ™ŸèŸÖŸÜÿ≠ ÿßŸÑŸÖŸàÿßŸÅŸÇÿ© ÿßŸÑÿµÿ±Ÿäÿ≠ÿ© ÿπŸÜÿØ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ: ÿßŸÑÿ™ŸàŸÇŸäÿπ ÿπŸÑŸâ ŸÖÿ∞ŸÉÿ±ÿ© ÿßŸÑÿ•ÿπŸÑÿßŸÖ (Ÿàÿ±ŸÇŸäÿ© ÿ£Ÿà ÿ™ŸàŸÇŸäÿπ ÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä)."
    })

    # ===== Droits des personnes =====
    remplir_droits_personnes(page, {
        "information": {
            "comment": "Notice d‚Äôinformation remise √† l‚Äôinscription + affichage sur le site.",
            "comment_ar": "ŸÖÿ∞ŸÉÿ±ÿ© ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿ™Ÿèÿ≥ŸÑŸëŸéŸÖ ÿπŸÜÿØ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ + ÿπÿ±ÿ∂ ÿπŸÑŸâ ÿßŸÑŸÖŸàŸÇÿπ.",
            "mesures": "Proc√©dure interne et point de contact identifi√© (Scolarit√©).",
            "mesures_ar": "ÿ•ÿ¨ÿ±ÿßÿ° ÿØÿßÿÆŸÑŸä ŸàŸÜŸÇÿ∑ÿ© ÿßÿ™ÿµÿßŸÑ ŸÖÿ≠ÿØÿØÿ© (ŸÖÿµŸÑÿ≠ÿ© ÿßŸÑÿ™ŸÖÿØÿ±ÿ≥).",
            "service": {"nom":"Service Scolarit√©","nom_ar":"ŸÖÿµŸÑÿ≠ÿ© ÿßŸÑÿ™ŸÖÿØÿ±ÿ≥","mobile":"0550123456","email":"scolarite@ecole.dz","adresse":"Accueil scolarit√© ‚Äì Alger","adresse_ar":"ÿßÿ≥ÿ™ŸÇÿ®ÿßŸÑ ÿßŸÑÿ™ŸÖÿØÿ±ÿ≥ ‚Äì ÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±"}
        },
        "acces": {
            "comment": "Demande via formulaire en ligne ou guichet scolarit√©.",
            "comment_ar": "ÿ∑ŸÑÿ® ÿπÿ®ÿ± ÿßÿ≥ÿ™ŸÖÿßÿ±ÿ© ÿπŸÑŸâ ÿßŸÑÿ•ŸÜÿ™ÿ±ŸÜÿ™ ÿ£Ÿà ŸÑÿØŸâ ÿ¥ÿ®ÿßŸÉ ÿßŸÑÿ™ŸÖÿØÿ±ÿ≥.",
            "mesures": "V√©rification d‚Äôidentit√© et r√©ponse sous 30 jours.",
            "mesures_ar": "ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑŸáŸàŸäÿ© ŸàÿßŸÑÿ±ÿØ ÿÆŸÑÿßŸÑ 30 ŸäŸàŸÖŸãÿß.",
            "service": {"nom":"Service Scolarit√©","nom_ar":"ŸÖÿµŸÑÿ≠ÿ© ÿßŸÑÿ™ŸÖÿØÿ±ÿ≥","mobile":"0551223344","email":"acces.donnees@ecole.dz","adresse":"Bureau scolarit√© ‚Äì B√¢t. A","adresse_ar":"ŸÖŸÉÿ™ÿ® ÿßŸÑÿ™ŸÖÿØÿ±ÿ≥ ‚Äì ÿßŸÑŸÖÿ®ŸÜŸâ A"}
        },
        "rectification": {
            "comment": "Demande par e-mail ou formulaire d√©di√© ; mise √† jour sous 72 h.",
            "comment_ar": "ÿ∑ŸÑÿ® ÿπÿ®ÿ± ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä ÿ£Ÿà ÿßÿ≥ÿ™ŸÖÿßÿ±ÿ© ŸÖÿÆÿµŸëÿµÿ©ÿõ ÿßŸÑÿ™ÿ≠ŸäŸäŸÜ ÿÆŸÑÿßŸÑ 72 ÿ≥ÿßÿπÿ©.",
            "mesures": "Workflow de correction valid√© par la scolarit√©.",
            "mesures_ar": "ÿ≥Ÿäÿ± ÿπŸÖŸÑ ŸÑŸÑÿ™ÿµÿ≠Ÿäÿ≠ ÿ®ŸÖÿµÿßÿØŸÇÿ© ŸÖÿµŸÑÿ≠ÿ© ÿßŸÑÿ™ŸÖÿØÿ±ÿ≥.",
            "service": {"nom":"Service Scolarit√©","nom_ar":"ŸÖÿµŸÑÿ≠ÿ© ÿßŸÑÿ™ŸÖÿØÿ±ÿ≥","mobile":"0552667788","email":"rectification@ecole.dz","adresse":"Rez-de-chauss√©e, b√¢timent A","adresse_ar":"ÿßŸÑÿ∑ÿßÿ®ŸÇ ÿßŸÑÿ£ÿ±ÿ∂Ÿäÿå ÿßŸÑŸÖÿ®ŸÜŸâ A"}
        },
        "opposition": {
            "comment": "Formulaire d‚Äôopposition disponible en ligne (hors obligations l√©gales).",
            "comment_ar": "ÿßÿ≥ÿ™ŸÖÿßÿ±ÿ© ÿßÿπÿ™ÿ±ÿßÿ∂ ŸÖÿ™ÿßÿ≠ÿ© ÿπÿ®ÿ± ÿßŸÑÿ•ŸÜÿ™ÿ±ŸÜÿ™ (ÿ®ÿßÿ≥ÿ™ÿ´ŸÜÿßÿ° ÿßŸÑÿßŸÑÿ™ÿ≤ÿßŸÖÿßÿ™ ÿßŸÑŸÇÿßŸÜŸàŸÜŸäÿ©).",
            "mesures": "Analyse de recevabilit√© et limitation du traitement concern√©.",
            "mesures_ar": "ÿ™ÿ≠ŸÑŸäŸÑ ŸÇÿßÿ®ŸÑŸäÿ© ÿßŸÑŸÇÿ®ŸàŸÑ Ÿàÿ™ŸÇŸäŸäÿØ ÿßŸÑŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑŸÖÿπŸÜŸäÿ©.",
            "service": {"nom":"DPO / Protection des donn√©es","nom_ar":"ŸÖÿ≥ÿ§ŸàŸÑ ÿ≠ŸÖÿßŸäÿ© ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™","mobile":"0553998877","email":"dpo@ecole.dz","adresse":"Direction ‚Äì 2e √©tage","adresse_ar":"ÿßŸÑŸÖÿØŸäÿ±Ÿäÿ© ‚Äì ÿßŸÑÿ∑ÿßÿ®ŸÇ ÿßŸÑÿ´ÿßŸÜŸä"}
        }
    })

    # ===== T√¢ches initiales =====
    taches = [
        {"fr":"Informer les apprenants (notice FR/AR) et diffuser le lien de signature","ar":"ÿ•ÿπŸÑÿßŸÖ ÿßŸÑŸÖÿ™ÿπŸÑŸëŸÖŸäŸÜ (ŸÖÿ∞ŸÉÿ±ÿ© FR/AR) ŸàŸÜÿ¥ÿ± ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿ™ŸàŸÇŸäÿπ"},
        {"fr":"Collecter les consentements √† l‚Äôinscription (papier ou e-signature)","ar":"ÿ¨ŸÖÿπ ÿßŸÑŸÖŸàÿßŸÅŸÇÿßÿ™ ÿπŸÜÿØ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ (Ÿàÿ±ŸÇŸäŸãÿß ÿ£Ÿà ÿ™ŸàŸÇŸäÿπ ÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä)"},
        {"fr":"Mettre en place la proc√©dure d‚Äôacc√®s/rectification (formulaire + e-mail d√©di√©)","ar":"Ÿàÿ∂ÿπ ÿ•ÿ¨ÿ±ÿßÿ° ÿ∑ŸÑÿ® ÿßŸÑÿßÿ∑ŸÑÿßÿπ/ÿßŸÑÿ™ÿµÿ≠Ÿäÿ≠ (ÿßÿ≥ÿ™ŸÖÿßÿ±ÿ© + ÿ®ÿ±ŸäÿØ ŸÖÿÆÿµŸëÿµ)"},
        {"fr":"V√©rifier et limiter les cat√©gories de donn√©es aux besoins de la finalit√©","ar":"ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ŸÅÿ¶ÿßÿ™ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ Ÿàÿ≠ÿµÿ±Ÿáÿß ÿ®ŸÖÿß ŸäŸÑÿ≤ŸÖ ŸÑÿ∫ÿ±ÿ∂ ÿßŸÑŸÖÿπÿßŸÑÿ¨ÿ©"}
    ]
    ajouter_taches_initiales(page, taches)

    print("üéâ Script termin√©.")
